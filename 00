<div class="flex flex-wrap justify-center">
  <div class="bg-white shadow-lg rounded-lg mx-4 my-6 max-w-xs overflow-hidden">
    <div class="px-4 py-6">
      <h2 class="text-xl font-bold">Card 1</h2>
      <div class="flex justify-between items-center mt-4">
        <div>
          <p class="text-gray-600">Total Incident</p>
          <p class="text-3xl font-bold">50</p>
        </div>
        <div class="relative">
          <p class="text-gray-600">Total Count</p>
          <div class="flex items-center">
            <p class="text-3xl font-bold">1,200</p>
            <svg class="ml-2 text-green-500 w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M4 7a1 1 0 0 1 2 0v5.586l1.293-1.293a1 1 0 0 1 1.414 0l4 4a1 1 0 0 1-1.414 1.414L10 14.414l-3.293 3.293a1 1 0 0 1-1.414-1.414l4-4a1 1 0 0 1 1.414 0L14 12.586V7a1 1 0 0 1 2 0v7a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7z" clip-rule="evenodd" />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Repeat the above code for the remaining cards -->
</div>




const express = require('express');
const sqlite3 = require('sqlite3').verbose();

const app = express();
const port = 3000;

// Configure SQLite database connection
const db = new sqlite3.Database('data.db');

// Define your backend routes and logic here
// Example:
app.get('/api/data', (req, res) => {
  db.all('SELECT * FROM myTable', (err, rows) => {
    if (err) {
      res.status(500).json({ error: err.message });
    } else {
      res.json(rows);
    }
  });
});

// Start the server
app.listen(port, () => {
  console.log(`Backend server is running on port ${port}`);
});
