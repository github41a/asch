import { Component, AfterViewInit, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';
import * as ApexCharts from 'apexcharts';
import { ApexChart } from 'ngx-apexcharts';

export class LineAreaChartComponent implements AfterViewInit, OnChanges {
  @Input() data: number[] = [10, 40, 35, 50, 49, 60, 70, 91, 125];
  @Input() categories: string[] = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'];

  selectedSeries: string[] = ['Series 1', 'Series 2', 'Series 3']; // Array to store selected series
  lineAreaChart: ApexCharts | null = null;
  radialGradientChart: ApexCharts | null = null;

  constructor(private elementRef: ElementRef) {}

  ngOnChanges(changes: SimpleChanges) {
    if ((changes['selectedSeries'] || changes['data']) && this.lineAreaChart) {
      this.lineAreaChart.updateOptions({
        series: this.getSeriesData(this.selectedSeries)
      });
    }
  }
  

  ngAfterViewInit() {
    this.renderChart();
    this.renderRadialGradientChart();
  }

  renderChart() {
    const lineAreaChartOptions = {
      series: this.getSeriesData(this.selectedSeries),
      chart: {
        type: 'area',
        height: 350,
        width: 500,
      },
      xaxis: {
        categories: this.categories,
      },
      dataLabels: {
        enabled: false,
      },
    };
    this.lineAreaChart = new ApexCharts(this.elementRef.nativeElement.querySelector('#lineAreaChart'), lineAreaChartOptions);
    this.lineAreaChart.render();
  }

  renderRadialGradientChart() {
    const radialGradientChartOptions = {
      series: [75], // Change the value to match your data
      chart: {
        type: 'radialBar',
        height: 350,
        width: 500,
      },
      plotOptions: {
        radialBar: {
          hollow: {
            size: '70%',
          },
          track: {
            background: {
              radialGradient: {
                cx: '50%',
                cy: '50%',
                r: '42%',
                gradientUnits: 'userSpaceOnUse',
              },
              stops: [
                { offset: 0, color: '#FFB64D' },
                { offset: 1, color: '#FF721A' },
              ],
            },
          },
          dataLabels: {
            name: {
              offsetY: -10,
              color: '#888',
              fontSize: '13px',
            },
            value: {
              color: '#111',
              fontSize: '30px',
              show: true,
            }
          },
        },
      },
    };
    this.radialGradientChart = new ApexCharts(this.elementRef.nativeElement.querySelector('#radialGradientChart'), radialGradientChartOptions);
    this.radialGradientChart.render();
  }

  onSeriesSelect() {
    if (this.lineAreaChart) {
      this.lineAreaChart.updateOptions({
        series: this.getSeriesData(this.selectedSeries)
      });
    }
  }

  getSeriesData(selectedSeries: string[]): any[] {
    const seriesData: any[] = [];

    selectedSeries.forEach((seriesName) => {
      if (seriesName === 'Series 1') {
        seriesData.push({
          name: 'Series 1',
          data: this.data,
        });
      } else if (seriesName === 'Series 2') {
        seriesData.push({
          name: 'Series 2',
          data: [20, 60, 45, 80, 65, 75, 95, 110, 140],
        });
      } else if (seriesName === 'Series 3') {
        seriesData.push({
          name: 'Series 3',
          data: [50, 30, 70, 90, 40, 55, 85, 100, 120],
        });
      }
    });

    return seriesData;
  }
}

-------------------------------------------------------------------
<!-- <div>
    <select [(ngModel)]="selectedSeries" (change)="onSeriesSelect()">
      <option value="Series 1">Series 1</option>
      <option value="Series 2">Series 2</option>
      <option value="Series 3">Series 3</option>
    </select>
  </div> -->
  <div id="lineAreaChart"></div>
  <div id="radialGradientChart"></div>

  --------------------------------------------
#lineAreaChart {
  width: 400px;
  height: 300px;
  margin: 20px;
}
#radialGradientChart {
  background-color: #F3F3F3; /* Replace with a different color if needed */
}
