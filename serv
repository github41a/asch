const express = require('express');
const DataFrame = require('dataframe-js').DataFrame;
const XLSX = require('xlsx');

const app = express();
const port = 3000;

// Route for handling the HTTP GET request
app.get('/', async (req, res) => {
  try {
    // Read data from Excel file (MasterSheet.xlsx) and convert to DataFrame
    const data = await readExcelData('MasterSheet.xlsx');

    // Perform calculations and formatting
    const totalCI = calculateSum(data, 'CI_Count');
    const totalIC = calculateSum(data, 'Incident_Count');
    const totalTC = calculateSum(data, 'Total_Cost');
    const totalSC = calculateSum(data, 'Storage_Cost');
    const totalDC = calculateSum(data, 'Database_Cost');

    const formattedTotalTC = formatCurrency(totalTC);
    const formattedTotalSC = formatCurrency(totalSC);
    const formattedTotalDC = formatCurrency(totalDC);

    const roundedTotalCI = roundValue(totalCI);
    const roundedTotalIC = roundValue(totalIC);

    // Prepare the response JSON object
    const response = {
      totalCI,
      totalIC,
      totalTC: formattedTotalTC,
      totalSC: formattedTotalSC,
      totalDC: formattedTotalDC,
      roundedTotalCI,
      roundedTotalIC,
    };

    // Send the response as JSON
    res.json(response);
  } catch (error) {
    console.error('Error:', error);
    res.status(500).send('Internal Server Error');
  }
});

// Read Excel data from file and convert to DataFrame
function readExcelData(filename) {
  return new Promise((resolve, reject) => {
    XLSX.readFile(filename, (error, workbook) => {
      if (error) {
        reject(error);
      } else {
        const worksheet = workbook.Sheets[workbook.SheetNames[0]];
        const jsonData = XLSX.utils.sheet_to_json(worksheet);

        const excelData = jsonData.map((item) => ({
          CI_Count: Number(item.CI_Count),
          Incident_Count: Number(item.Incident_Count),
          Total_Cost: Number(item.Total_Cost),
          Storage_Cost: Number(item.Storage_Cost),
          Database_Cost: Number(item.Database_Cost),
          // Add other columns as needed
        }));

        const df = new DataFrame(excelData);
        resolve(df);
      }
    });
  });
}

// Currency formatting
function formatCurrency(value) {
  return `$${value.toFixed(2)}`;
}

// Rounding decimal values
function roundValue(value) {
  return Math.round(value);
}

// Calculation: Sum of a specific column
function calculateSum(data, column) {
  return data
    .getColumn(column)
    .toArray()
    .reduce((sum, item) => sum + item, 0);
}

// Start the server
app.listen(port, () => {
  console.log(`Server is listening on port ${port}`);
});
